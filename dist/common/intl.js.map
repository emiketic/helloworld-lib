{"version":3,"sources":["../../src/common/intl.js"],"names":["TIME_ZONE","Intl","DateTimeFormat","resolvedOptions","timeZone","defineLocale","localeCode","defaults","currency","translations","locale","setTranslations","_translations","updateTranslations","$t","text","args","forEach","arg","replace","number","value","options","toLocaleString","style","date","toLocaleDateString","time","hour","minute","toLocaleTimeString","Object","assign","timestamp","$intl","en","current"],"mappings":";;;;;;;;;;;;AAAO,IAAMA,SAAS,GAAGC,IAAI,CAACC,cAAL,GAAsBC,eAAtB,GAAwCC,QAA1D;;;AAEA,SAASC,YAAT,CAAsBC,UAAtB,EAAiD;AAAA,MAAfC,QAAe,uEAAJ,EAAI;AACtDA,EAAAA,QAAQ;AACNH,IAAAA,QAAQ,EAAEJ,SADJ;AAENQ,IAAAA,QAAQ,EAAE;AAFJ,KAGHD,QAHG,CAAR;AAMA,MAAIE,YAAY,GAAG,EAAnB;AAEA,MAAMC,MAAM,GAAG;AACbC,IAAAA,eADa,2BACGC,aADH,EACkB;AAC7BH,MAAAA,YAAY,GAAGG,aAAf;AACD,KAHY;AAKbC,IAAAA,kBALa,8BAKMD,aALN,EAKqB;AAChCH,MAAAA,YAAY,qBAAQA,YAAR;AAAsBG,QAAAA,aAAa,EAAbA;AAAtB,QAAZ;AACD,KAPY;AASbE,IAAAA,EATa,cASVC,IATU,EASK;AAChBA,MAAAA,IAAI,GAAGN,YAAY,CAACM,IAAD,CAAZ,IAAsBA,IAA7B;;AADgB,wCAANC,IAAM;AAANA,QAAAA,IAAM;AAAA;;AAEhBA,MAAAA,IAAI,CAACC,OAAL,CAAa,UAACC,GAAD;AAAA,eAAUH,IAAI,GAAGA,IAAI,CAACI,OAAL,CAAa,KAAb,EAAoBD,GAApB,CAAjB;AAAA,OAAb;AACA,aAAOH,IAAP;AACD,KAbY;AAebK,IAAAA,MAfa,kBAeNC,KAfM,EAee;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AAC1B,aAAOD,KAAK,CAACE,cAAN,CAAqBjB,UAArB,EAAiCgB,OAAjC,CAAP;AACD,KAjBY;AAmBb;AACA;AACA;AAEAd,IAAAA,QAvBa,oBAuBJa,KAvBI,EAuB+C;AAAA,UAA5Cb,SAA4C,uEAAjCD,QAAQ,CAACC,QAAwB;;AAAA,UAAdc,OAAc,uEAAJ,EAAI;AAC1D,aAAOD,KAAK,CAACE,cAAN,CAAqBjB,UAArB;AACLkB,QAAAA,KAAK,EAAE,UADF;AAELhB,QAAAA,QAAQ,EAARA;AAFK,SAGFc,OAHE,EAAP;AAKD,KA7BY;AA+BbG,IAAAA,IA/Ba,gBA+BRJ,KA/BQ,EA+Ba;AAAA,UAAdC,OAAc,uEAAJ,EAAI;AACxB,aAAOD,KAAK,CAACK,kBAAN,CAAyBpB,UAAzB,oBACFgB,OADE;AAELlB,QAAAA,QAAQ,EAAEkB,OAAO,CAAClB,QAAR,IAAoBG,QAAQ,CAACH;AAFlC,SAAP;AAID,KApCY;AAsCbuB,IAAAA,IAtCa,gBAuCXN,KAvCW,EA4CX;AAAA,UAJAC,OAIA,uEAJU;AACRM,QAAAA,IAAI,EAAE,SADE;AAERC,QAAAA,MAAM,EAAE;AAFA,OAIV;AACA,aAAOR,KAAK,CAACS,kBAAN,CAAyBxB,UAAzB,oBACFgB,OADE;AAELlB,QAAAA,QAAQ,EAAEkB,OAAO,CAAClB,QAAR,IAAoBG,QAAQ,CAACH;AAFlC,SAAP;AAID;AAjDY,GAAf;AAoDA2B,EAAAA,MAAM,CAACC,MAAP,CAActB,MAAd,EAAsB;AACpBuB,IAAAA,SADoB,qBACVZ,KADU,EACH;AACf,uBAAUX,MAAM,CAACe,IAAP,CAAYJ,KAAZ,CAAV,cAAgCX,MAAM,CAACiB,IAAP,CAAYN,KAAZ,CAAhC;AACD;AAHmB,GAAtB;AAMA,SAAOX,MAAP;AACD;;AAED,IAAMwB,KAAK,GAAG,EAAd;AAEAA,KAAK,CAACC,EAAN,GAAW9B,YAAY,CAAC,IAAD,CAAvB;AAEA6B,KAAK,CAACE,OAAN,GAAgBF,KAAK,CAACC,EAAtB;eAEeD,K","sourcesContent":["export const TIME_ZONE = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\nexport function defineLocale(localeCode, defaults = {}) {\n  defaults = {\n    timeZone: TIME_ZONE,\n    currency: 'USD',\n    ...defaults,\n  };\n\n  let translations = {};\n\n  const locale = {\n    setTranslations(_translations) {\n      translations = _translations;\n    },\n\n    updateTranslations(_translations) {\n      translations = { ...translations, _translations };\n    },\n\n    $t(text, ...args) {\n      text = translations[text] || text;\n      args.forEach((arg) => (text = text.replace('%{}', arg)));\n      return text;\n    },\n\n    number(value, options = {}) {\n      return value.toLocaleString(localeCode, options);\n    },\n\n    // currency(value, currency = defaults.currency, options = {}) {\n    //   return `${value.toLocaleString(localeCode, options)} ${currency}`;\n    // },\n\n    currency(value, currency = defaults.currency, options = {}) {\n      return value.toLocaleString(localeCode, {\n        style: 'currency',\n        currency,\n        ...options,\n      });\n    },\n\n    date(value, options = {}) {\n      return value.toLocaleDateString(localeCode, {\n        ...options,\n        timeZone: options.timeZone || defaults.timeZone,\n      });\n    },\n\n    time(\n      value,\n      options = {\n        hour: 'numeric',\n        minute: 'numeric',\n      },\n    ) {\n      return value.toLocaleTimeString(localeCode, {\n        ...options,\n        timeZone: options.timeZone || defaults.timeZone,\n      });\n    },\n  };\n\n  Object.assign(locale, {\n    timestamp(value) {\n      return `${locale.date(value)} ${locale.time(value)}`;\n    },\n  });\n\n  return locale;\n}\n\nconst $intl = {};\n\n$intl.en = defineLocale('en');\n\n$intl.current = $intl.en;\n\nexport default $intl;\n"],"file":"intl.js"}